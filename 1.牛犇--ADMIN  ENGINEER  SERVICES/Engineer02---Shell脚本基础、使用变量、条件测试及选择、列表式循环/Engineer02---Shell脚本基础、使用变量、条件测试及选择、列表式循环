1:shell脚本基础
   脚本:可以执行的一个文件,实现某种功能

2脚本的基础格式
   声明环境
   注释
   执行的命令（可执行的代码）

重定向输出

     >  :只收集前面命令的正确输出
     2>:只收集前面命令的错误输出
     &>:收集前面命令的正确输出与错误输出

黑洞设备
    /dev/null


 为了让脚本的增加灵活度,适应多变的环境,使用变量
    变量=容器            以不变的名称,存放可以变化的值
    定义变量:
       变量名=存放的值

定义/赋值变量
• 设置变量时的注意事项
– 变量名只能由字母/数字/下划线组成,区分大小写
– 变量名不能以数字开头,不要使用关键字和特殊字符

– 若指定的变量名已存在,相当于为此变量重新赋值
– 等号两边不要有空格


• 基本格式
– 引用变量值:$变量名
– 查看变量值:echo $变量名、echo ${变量名}

 单引号  ' '  :取消特殊字符的意义,原样输出

反撇号 `  `  或  $(      ) :将命令的输出,直接参数其他命令运行

根据变量的用途不同区分
    环境变量: 变量名一般都大写,用来设置用户/系统环境
                  由系统定义完成,由系统赋值完成


位置变量: bash内置,存储执行脚本时提供的命令行参数
                  由系统定义完成,由系统赋值完成
                  表示为 $n,n为序号
 		  $1、$2、.. .. ${10}、${11}、.. ..

为了降低脚本的使用难度,提高用户的体验度,采用交互式传递参数方法
  
   read作用:
                1.产生交互
                2.自动记录用户在键盘上的输入
                3.自动将用户在键盘上的输入,赋值给一个变量储存

   预定义变量: bash内置,可直接调用的特殊值,不能直接修改
                     由系统定义完成,由系统赋值完成
                     $# 已加载的位置变量的个数
                     $* 所有位置变量的值
                     $? 程序退出后的状态值,0表示正常,其他值异常

   自定义变量: 用户自主设置、修改及使用

######################################################
条件测试及选择

条件测试
           [   测试表达式   ]       #每一部分之间都要有空格
  
常用的测试选项
• 检查文件状态
   -e:文档存在为真
   -d:文档存在,并且为目录才为真
   -f:文档存在,并且为文件才为真
   -r:文档存在,并且对其有读取权限为真
   -w:文档存在,并且对其有写入权限为真
   -x:文档存在,并且对其有执行权限为真


 比较整数大小(带e的都有等于二字,g是大于,l是小于)
   -gt:大于
   -ge:大于等于
   -eq:等于
   -ne:不等于
   -lt:小于
   -le:小于等于


 字符串比对
      ==:相等一致为真                                     
      !=:不相等为真


if选择结构

if双分支处理

  if  [条件测试];then
       命令序列xx
  else
       命令序列yy
  fi

if多分支处理

	if  [条件测试1];then
	   命令序列xx
	elif  [条件测试2];then
    	   命令序列yy
	elif  [条件测试3];then
	   命令序列cc
        .......
	else
	   命令序列zz
	fi



for循环结构:可以重复执行一个操作

• 遍历/列表式循环
– 根据变量的不同取值,重复执行xx处理

	for  变量名  in   值列表
	do
	       命令序列
	done


for循环中,变量的值可以不参与循环执行的动作

[root@server0 ~]# cat /root/for01.sh
#!/bin/bash
for  a  in  zhangsan  lisi  wangwu dc tc dz tz 
do
  echo hello world
done
[root@server0 ~]#

   造数工具:{起始点..结束点}       {1..50}生成1到50之间所有的数字

[root@server0 ~]# cat /root/for01.sh
#!/bin/bash
for  a  in  {1..15}
do
  echo hello world
done
[root@server0 ~]#











