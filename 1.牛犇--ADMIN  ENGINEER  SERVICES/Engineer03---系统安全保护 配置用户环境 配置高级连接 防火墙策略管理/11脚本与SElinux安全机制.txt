还原教学环境介绍，保证classroom虚拟机优先开机
真机使用rht-vmctl辅助工具                 
– 常用控制指令:    reset(还原)
  ]# rht-vmctl reset classroom   //先重置资源服务器
  ]# rht-vmctl reset server
  ]# rht-vmctl reset desktop 

[root@server0 ~]# rm -rf /etc/yum.repos.d/*
[root@server0 ~]# vim /etc/yum.repos.d/dvd.repo
[haha]
name=xixi
baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/
enabled=1
gpgcheck=0
[root@server0 ~]# yum repolist 
[root@server0 ~]# yum -y  install httpd
######################################################

案例：Shell脚本
为系统 server0 书写脚本/root/user.sh
  运行脚本，可以判断用户输入的用户是否存在
  如果存在，输出用户基本信息（id  用户名）
  如果用户，不存在则创建用户，并输出用户创建成功

[root@server0 ~]# vim /root/user.sh
 #!/bin/bash
 read  -p  '请输入您测试是的用户名:'     a

 id  $a  &> /dev/null
 if  [  $?  -eq  0  ];then
     echo 用户存在
     id   $a
 else
     useradd  $a
     echo 用户创建成功
 fi


[root@server0 ~]# vim    /root/user.sh 
 #!/bin/bash
 read  -p  '请输入您测试是的用户名:'     a

 useradd   $a  &> /dev/null
 if  [  $?  -eq  0  ];then
     echo 用户创建成功
 else
     echo 用户存在
     id   $a
 fi

#####################################################
案例4:编写一个判断脚本
在 server0 上创建 /root/foo.sh 脚本
1)当运行/root/foo.sh  redhat,输出为fedora
2)当运行/root/foo.sh  fedora,输出为redhat
3)当没有任何参数或者参数不是 redhat 或者fedora时,
其错误输出产生以下信息:/root/foo.sh  redhat|fedora

[root@server0 ~]# vim  /root/foo.sh 
 #!/bin/bash
 if  [  $#  -eq 0  ];then        #匹配用户没有输入参数
    echo '/root/foo.sh    redhat|fedora'  >&2 #转变为错误输出
    exit 23    #程序退出返回值
 elif  [  $1 == redhat  ];then
    echo fedora
 elif  [  $1 == fedora  ];then
    echo redhat
 else
    echo '/root/foo.sh    redhat|fedora'  >&2 #转变为错误输出
    exit 24    #程序退出返回值
 fi
[root@server0 ~]# 

案例5:编写一个批量添加用户脚本
在 server0 上创建 /root/batchusers 脚本
1)此脚本要求提供用户名列表文件作为参数
2)如果没有提供参数,此脚本应该给出提示 
 Usage:  /root/batchusers,退出并返回相应值
3)如果提供一个不存在的文件,此脚本应该给出提
示 Input file not found,退出并返回相应值
4)新用户的登录Shell为 /bin/false,无需设置密码
5)用户列表测试文件:
 http://classroom.example.com/pub/materials/userlist

[root@server0 ~]# vim  /root/bachusers   
 #!/bin/bash
 if [  $#  -eq  0  ];then 
   echo 'Usage:  /root/batchusers'  >&2  #将输出变为错误输出
   exit  2
 elif  [  -f   $1 ];then        #判断命令行参数是否为文件
  for  a   in  $(cat   $1)      #将命令的输出作为列表
  do
    useradd  -s  /bin/false  $a   &> /dev/null
    echo  $a创建成功 
  done
 else
   echo  'Input  file  not  found'  >&2
   exit  3
 fi
[root@server0 ~]# 
#####################################################

SELinux安全机制
• Security-Enhanced Linux
– 美国NSA国家安全局主导开发,一套增强Linux系统安全的强制访问控制体系
– 集成到Linux内核(2.6及以上)中运行
– RHEL7基于SELinux体系针对用户、进程、目录和文件
提供了预设的保护策略,以及管理工具


SELinux运行模式的切换
• SELinux的运行模式
– enforcing(强制)、permissive(宽松)
– disabled(彻底禁用)

   变成disabled状态,必须经历重起系统

• 切换运行模式
– 临时切换:setenforce 1|0
– 查看当前模式:getenforce 
– 固定配置:/etc/selinux/config 文件

虚拟机server
[root@server0 ~]# vim /etc/selinux/config   #修改固定配置文件
SELINUX=permissive

[root@server0 ~]# getenforce     #查看SELinux当前模式
[root@server0 ~]# setenforce  0  #修改当前模式为permissive
[root@server0 ~]# getenforce 

虚拟机desktop
[root@desktop0 ~]# vim /etc/selinux/config 
SELINUX=permissive

[root@desktop0 ~]# getenforce 
[root@desktop0 ~]# setenforce 0
[root@desktop0 ~]# getenforce 

######################################################
防火墙策略基本使用

虚拟机server
一  搭建基本Web服务
     1.安装httpd软件
   [root@server0 ~]# yum -y install httpd
     2.重起httpd服务
   [root@server0 ~]# systemctl restart httpd
   [root@server0 ~]# systemctl enable httpd
     3.本机访问测试
   [root@server0 ~]# firefox  172.25.0.11
     4.书写一个页面文件
         默认页面文件存放的路径:/var/www/html
         默认网页文件名称: index.html
  [root@server0 ~]# cat /var/www/html/index.html 
  <marquee><font  color=red><h1>NSD1811 阳光明媚!!
    滚动           字体颜色为红色    最大标题字体
  [root@server0 ~]# firefox 172.25.0.11

二  搭建基本FTP服务(文件传输协议)
     1.安装vsftpd软件
   [root@server0 ~]# yum -y install vsftpd
     2.重起vsftpd服务
   [root@server0 ~]# systemctl restart vsftpd
   [root@server0 ~]# systemctl enable vsftpd
     3.本机访问测试
       默认共享数据的路径:/var/ftp
   [root@server0 ~]# firefox   ftp://172.25.0.11

###################################################
防火墙策略管理
   
     作用:隔离过滤

     硬件防火墙
     软件防火墙

firewalld服务基础

RHEL7的防火墙体系
• 系统服务:firewalld
• 管理工具:firewall-cmd、firewall-config

[root@server0 ~]# systemctl restart firewalld
[root@server0 ~]# firewall-config &


预设安全区域
• 根据所在的网络场所区分,预设保护规则集
  – public:仅允许访问本机的sshd dhcp  ping等少数几个服务
  – trusted:允许任何访问
  – block:阻塞任何来访请求(明确拒绝,会给回应)
  – drop:丢弃任何来访的数据包(直接丢弃,不给回应,节省资源)

  数据包: 源IP地址   目标IP地址   数据

防火墙判定的规则:
  1.查看客户端请求中,源IP地址然后查阅自己那个区域,有该IP地址的规则,则进入该区域

  2.进入默认区域public

########################################################
虚拟机server                
]# firewall-cmd --get-default-zone    #查看默认区域
虚拟机desktop
]# ping -c 2 172.25.0.11      #可以通信

虚拟机server
]# firewall-cmd --set-default-zone=block  #修改默认防火墙区域
]# firewall-cmd --get-default-zone   #查看默认区域
虚拟机desktop
]# ping -c 2 172.25.0.11     #不可以通信,有回应

虚拟机server
]# firewall-cmd --set-default-zone=drop   #修改默认防火墙区域
]# firewall-cmd --get-default-zone 
虚拟机desktop
]# ping -c 2 172.25.0.11     #不可以通信,没有回应

#######################################################
在public区域添加服务或协议

虚拟机server
]# firewall-cmd --set-default-zone=public  #修改默认区域
]# firewall-cmd --get-default-zone         #查看默认区域
]# firewall-cmd --zone=public --list-all  #查看public区域规则
虚拟机desktop
]# firefox  172.25.0.11           #无法访问
]# firefox  ftp://172.25.0.11     #无法访问

虚拟机server
]# firewall-cmd --zone=public --add-service=ftp   #添加协议
]# firewall-cmd --zone=public --add-service=http  #添加协议
]# firewall-cmd --zone=public --list-all  #查看public区域规则
虚拟机desktop
]# firefox  172.25.0.11           #访问成功
]# firefox  ftp://172.25.0.11     #访问成功

                                    
互联网常见的协议:
         http:超文本传输协议             默认端口: 80
         https:安全的超文本传输协议   默认端口: 443   
         ftp:文本传输协议              默认端口:21
         tftp:简单的文本传输协议   默认端口:69 
         DNS:域名解析协议              默认端口:53
         telnet:远程管理协议         默认端口:23
         SMTP:邮件协议(发邮件的协议)     默认端口:25 
         pop3:邮件协议(收邮件的协议)     默认端口:110
         SNMP:简单网络管理协议             默认端口:161

#######################################################
永久在public区域中添加协议

• 配置规则的位置
– 永久(--permanent)
]# firewall-cmd --reload     #重新加载防火墙所有规则
]# firewall-cmd --zone=public --list-all
]# firewall-cmd --permanent  --zone=public  --add-service=http
]# firewall-cmd --zone=public --list-all

]# firewall-cmd --reload     #重新加载防火墙所有规则
]# firewall-cmd --zone=public --list-all 


###################################################
了解:单独拒绝虚拟机desktop
    将虚拟机desktop的IP地址放入block区域中
虚拟机server:设置防火墙规则
]# firewall-cmd --permanent --zone=block --add-source=172.25.0.10

]# firewall-cmd --reload 
]# firewall-cmd --zone=block --list-all 

测试:
[root@desktop0 ~]# firefox  172.25.0.11  #刷新浏览器访问,失败
[root@desktop0 ~]# ping  172.25.0.11     #失败
[root@room9pc01 ~]# firefox 172.25.0.11  #真机访问成功
######################################################
删除规则:
[root@server0 ~]# firewall-cmd --permanent --zone=block --remove-source=172.25.0.10

[root@server0 ~]# firewall-cmd --reload
######################################################
 端口: 协议或服务或程序编号    标识作用   
     root可以改变端口,一个程序具备多个端口

   IP地址:在互联网寻找到相应的主机
     端口:在主机标识  协议或服务或程序

     数据包:源IP地址  目标IP地址  数据    目标端口

实现本机的端口转发
• 本地应用的端口重定向(端口1 --> 端口2)
– 从客户机访问 5423 的请求,自动映射到本机 80
– 比如,访问以下两个地址可以看到相同的页面:
   http://172.25.0.11:5423/
   http://172.25.0.11

虚拟机desktop:
[root@desktop0 ~]# firefox 172.25.0.11:5423  #访问失败

虚拟机server:
]# firewall-cmd --permanent --zone=public 
--add-forward-port=port=5423:proto=tcp:toport=80

]# firewall-cmd --reload 

]# firewall-cmd --zone=public  --list-all

虚拟机desktop:
[root@desktop0 ~]# firefox 172.25.0.11:5423  #访问成功

#######################################################

































































































































