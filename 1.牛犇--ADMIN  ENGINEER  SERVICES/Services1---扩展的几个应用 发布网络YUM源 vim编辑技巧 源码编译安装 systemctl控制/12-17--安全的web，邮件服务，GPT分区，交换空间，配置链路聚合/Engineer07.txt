还原教学环境介绍，保证classroom虚拟机优先开机      
真机使用rht-vmctl辅助工具                 
– 常用控制指令:    reset(还原)
  ]# rht-vmctl reset classroom   //先重置资源服务器
  ]# rht-vmctl reset server
  ]# rht-vmctl reset desktop        

设置防火墙默认区域
虚拟机server
[root@server0 ~]#  firewall-cmd --set-default-zone=trusted 
虚拟机desktop
[root@desktop0 ~]# firewall-cmd --set-default-zone=trusted
########################################################

Web服务
      端口的优先级,优于域名,也优于IP地址   


安全Web服务
  https:安全的超文本传输协议  443

– 公钥:主要用来加密数据
– 私钥:主要用来解密数据(与相应的公钥匹配)
– 数字证书:证明拥有者的合法性/权威性(单位名称、
有效期、公钥、颁发机构及签名、......)
– Certificate Authority,数字证书授权中心:负责证书
的申请/审核/颁发/鉴定/撤销等管理工作



虚拟机server:部署Web服务器
1.安装httpd软件
2.部署网站证书(营业执照)   部署根证书(工商局信息)  
]# cd /etc/pki/tls/certs/
]# wget http://classroom.example.com/pub/tls/certs/server0.crt        
]# wget http://classroom.example.com/pub/example-ca.crt
4.部署解密的私钥
]# cd  /etc/pki/tls/private/
]# wget http://classroom.example.com/pub/tls/private/server0.key

5.安装mod_ssl软件,支持安全加密的Web软件
]# yum -y install mod_ssl
]# rpm -ql mod_ssl
/etc/httpd/conf.d/ssl.conf
6.修改配置文件
[root@server0 /]# vim /etc/httpd/conf.d/ssl.conf

  在末行模式    :set  nu     #开启行号功能

  59 DocumentRoot  "/var/www/html"
  60 ServerName  www0.example.com:443
 #指定网站证书
 100 SSLCertificateFile /etc/pki/tls/certs/server0.crt
 #指定解密的私钥匙文件
 107 SSLCertificateKeyFile /etc/pki/tls/private/server0.key
 #指定根证书(工商局信息) 
 122 SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

7.重起httpd服务
]# systemctl restart httpd
]# echo '<h1>NSD1811 Web' > /var/www/html/index.html
]# cat /var/www/html/index.html

8.测试验证
[root@server0 /]# firefox  https://www0.example.com
######################################################
基础邮件服务

• 电子邮件服务器的基本功能
– 为用户提供电子邮箱存储空间(用户名@邮件域名)
– 处理用户发出的邮件 —— 传递给收件服务器
– 处理用户收到的邮件 —— 投递到邮箱
  
    SMTP:用户发邮件协议   默认端口 25
    pop3:用户收邮件协议  默认端口 110


 DNS服务器:虚拟机classroom

       lisi@server0.example.com
       zhangsan@server0.example.com

虚拟机server:搭建邮件服务器
1.安装软件包postfix
[root@server0 /]# rpm -q postfix
postfix-2.10.1-6.el7.x86_64

2.修改主配置文件 /etc/postfix/main.cf
[root@server0 /]#  vim  /etc/postfix/main.cf

    末行模式下   :set  nu       #开启行号

99 myorigin = server0.example.com #收件人与发件人补全的域名后缀

116 inet_interfaces = all   #本机所有网络接口都提供邮件功能

164 mydestination = server0.example.com  
                                                #判定收件人域名后缀   为本域邮件

destination:目标

3.重起服务postfix
[root@server0 /]# systemctl restart postfix

#####################################################
创建普通用户测试邮件收发
[root@server0 /]# useradd yg
[root@server0 /]# useradd xln

使用mail命令发信/收信
• 发信操作
   – mail  -s  '邮件标题'    -r 发件人    收件人

• 收信操作
   – mail  [-u 用户名]

[root@server0 /]# mail -s 'test01' -r  yg  xln
hahaxixihehelele
.
EOT
[root@server0 /]# mail -u xln
 输入邮件的编号  进行查看邮件内容

[root@server0 /]# echo BBB | mail -s 'test01' -r  yg  xln
[root@server0 /]# mail -u xln

#######################################################
parted分区工具
• 使用fdisk操作>2.2TB的磁盘时
– 超出容量的磁盘将会无法识别,导致分区失效
– 如何处理大容量的磁盘?

分区模式    GPT:  最多可以划分128个主分区
                          最大空间支持到 18EB 容量
                1TB=1000GB
                1PB=1000TB
                1EB=1000PB


[root@server0 /]# parted  /dev/vdb        
(parted) mktable   gpt     #指定分区模式          
(parted) print             #输出分区表
(parted) mkpart            #划分新的分区
 分区名称？  []?   haha          #指定分区的名称,随意写
文件系统类型？  [ext2]? ext4    #分区文件系统类型,不起实际作用
起始点？ 0                                
结束点？ 2G                            
忽略/Ignore/放弃/Cancel? Ignore   #忽略  硬盘存储分区表空间
(parted) print
(parted) unit GB                 #使用单位为GB
(parted) mkpart 
分区名称？  []? haha 
文件系统类型？  [ext2]? ext4           
起始点？ 2G          
结束点？ 4G                                  
(parted) print                                         


什么是交换空间
• 相当于虚拟内存
– 当物理内存不够用时,使用磁盘空间来模拟内存
– 在一定程度上缓解内存不足的问题
– 交换分区:以空闲分区充当的交换空间

1.格式化交互文件系统
[root@server0 /]# mkswap /dev/vdb1
[root@server0 /]# blkid  /dev/vdb1

[root@server0 /]# mkswap /dev/vdb2
[root@server0 /]# blkid  /dev/vdb2

2.启用交换分区
[root@server0 /]# swapon /dev/vdb1
[root@server0 /]# swapon -s          #查看组成交换空间成员信息
[root@server0 /]# swapon /dev/vdb2
[root@server0 /]# swapon -s

3.停用交换分区
[root@server0 /]# swapoff  /dev/vdb1
[root@server0 /]# swapon  -s
[root@server0 /]# swapoff  /dev/vdb2
[root@server0 /]# swapon  -s

4.开机自动启用交换分区
[root@server0 /]# vim  /etc/fstab 
 /dev/vdb1  swap  swap  defaults 0 0
 /dev/vdb2  swap  swap  defaults 0 0


]# swapon  -a    #专用于检测交换分区是否书写正确的指令
]# swapon  -s

#####################################################
配置聚合连接(链路聚合  网卡组队   网卡绑定)

    采用虚拟网卡设计,对网卡设备的备份

                  eth1          eth2

                                      虚拟:team0 
                                     192.168.1.1

    热备份(activebackup)连接冗余

##################################################
1.创建虚拟网卡team0  参考: man  teamd.conf  #全文搜索/example
]# nmcli  connection  add   type  team 
   ifname  team0  con-name  team0  autoconnect  yes       
   config  '{"runner": {"name": "activebackup"}}'

  nmcli connection 添加  类型   team(组队)
    网卡名  team0  配置文件名  team0  每次开机自动启用
    配置运行模式   热备份模式

# ifconfig   #查看team0网卡信息
# cat /et(tab)/sysco(tab)/netw(tab)-(tab)/ifcfg-team0
    生成的网卡配置文件信息

如果有敲错，一定要删除 :  nmcli connection delete team0 
    
2. 添加成员
]# nmcli connection add   type team-slave 
 ifname  eth1 con-name team0-1  master team0

]# nmcli connection add   type team-slave 
 ifname  eth2 con-name team0-2  master team0

解析： nmcli connection  添加    类型为   team的成员
          配置文件名   team0-1  网卡为 eth1   主设备为  team0

如果有敲错，一定要删除 :  nmcli connection delete team0-1
如果有敲错，一定要删除 :  nmcli connection delete team0-2

3.配置team0的IP地址
[root@server0 /]# nmcli connection modify team0        ipv4.method manual ipv4.addresses 192.168.1.1/24     connection.autoconnect  yes

[root@server0 /]# nmcli connection up team0  #激活配置
[root@server0 /]# ifconfig
删除指令 : 
 nmcli connection delete team0 
 nmcli connection delete team0-1
 nmcli connection delete team0-2

######################################################
查看team0信息的指令
[root@server0 /]# teamdctl team0 state 
[root@server0 /]# ifconfig eth2 down
[root@server0 /]# teamdctl team0 state 
[root@server0 /]# ifconfig eth1 down
[root@server0 /]# teamdctl team0 state 

[root@server0 /]# ifconfig eth1 up
[root@server0 /]# ifconfig eth2 up
[root@server0 /]# teamdctl team0 state 

##################################################























































































